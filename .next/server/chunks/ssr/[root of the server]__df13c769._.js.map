{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///Users/hailey/Desktop/study/mbti-app-2025/src/app/tests/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\"; \n\nimport { useParams } from \"next/navigation\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\n\nconst questions = [\n  { id: 1, question: \"당신은 새로운 사람들과 쉽게 어울리나요?\", options: [\"예\", \"아니요\"] },\n  { id: 2, question: \"계획적인 것을 좋아하시나요?\", options: [\"예\", \"아니요\"] },\n  { id: 3, question: \"감정보다 논리를 우선하나요?\", options: [\"예\", \"아니요\"] },\n];\n\nexport default function TestPage() {\n  const { id } = useParams();  // URL에서 동적 경로 파라미터 가져오기\n  const router = useRouter();\n\n  // id가 없거나 숫자로 변환이 안되면 기본값 0으로 처리\n  const questionIndex = id ? parseInt(id) - 1 : 0;  \n  const isLastQuestion = questionIndex === questions.length - 1;\n\n  // 배열 범위를 벗어나면 에러 방지\n  if (questionIndex < 0 || questionIndex >= questions.length) {\n    return <h1>존재하지 않는 질문입니다.</h1>;\n  }\n\n  function handleAnswer(answer: number) {\n    console.log('Answer: ' + answer);\n\n    if (isLastQuestion) {\n      router.push(\"/result\"); // 마지막 질문이라면 결과 페이지로 이동\n    } else {\n      router.push(`/tests/${questionIndex + 2}`); // 다음 질문으로 이동\n    }\n  }\n\n  return (\n    <>\n      <h1>TEST PAGE</h1>\n      <div>ID: {id}</div>\n      <div>Question Index: {questionIndex}</div>\n\n      <div>{questions[questionIndex].question}</div>\n      <div>\n        {questions[questionIndex].options.map((option, index) => (\n          <div key={index}>\n            <button onClick={() => handleAnswer(index)}>\n              {option}\n            </button>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAMA,MAAM,YAAY;IAChB;QAAE,IAAI;QAAG,UAAU;QAA0B,SAAS;YAAC;YAAK;SAAM;IAAC;IACnE;QAAE,IAAI;QAAG,UAAU;QAAmB,SAAS;YAAC;YAAK;SAAM;IAAC;IAC5D;QAAE,IAAI;QAAG,UAAU;QAAmB,SAAS;YAAC;YAAK;SAAM;IAAC;CAC7D;AAEc,SAAS;IACtB,MAAM,EAAE,EAAE,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD,KAAM,wBAAwB;IACrD,MAAM,SAAS,CAAA,GAAA,8HAAA,CAAA,YAAS,AAAD;IAEvB,iCAAiC;IACjC,MAAM,gBAAgB,KAAK,SAAS,MAAM,IAAI;IAC9C,MAAM,iBAAiB,kBAAkB,UAAU,MAAM,GAAG;IAE5D,oBAAoB;IACpB,IAAI,gBAAgB,KAAK,iBAAiB,UAAU,MAAM,EAAE;QAC1D,qBAAO,8OAAC;sBAAG;;;;;;IACb;IAEA,SAAS,aAAa,MAAc;QAClC,QAAQ,GAAG,CAAC,aAAa;QAEzB,IAAI,gBAAgB;YAClB,OAAO,IAAI,CAAC,YAAY,uBAAuB;QACjD,OAAO;YACL,OAAO,IAAI,CAAC,CAAC,OAAO,EAAE,gBAAgB,GAAG,GAAG,aAAa;QAC3D;IACF;IAEA,qBACE;;0BACE,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;;oBAAI;oBAAK;;;;;;;0BACV,8OAAC;;oBAAI;oBAAiB;;;;;;;0BAEtB,8OAAC;0BAAK,SAAS,CAAC,cAAc,CAAC,QAAQ;;;;;;0BACvC,8OAAC;0BACE,SAAS,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,sBAC7C,8OAAC;kCACC,cAAA,8OAAC;4BAAO,SAAS,IAAM,aAAa;sCACjC;;;;;;uBAFK;;;;;;;;;;;;AASpB","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}